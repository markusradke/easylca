load_all(); generate_model_report(test, 1, 4)
load_all(); generate_model_report(test, 1, 4)
rm(list=ls())
load_all()
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 == round(runif(nrow(testdata), min = 1, max = 3))), analysis_name = 'test', id_variable = 'id', nclasses = 3, use = c('var1', 'var2', 'var3'), nominal = 'var3', categorical = c('var1', 'var2'))
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = round(runif(nrow(testdata), min = 1, max = 3))), analysis_name = 'test', id_variable = 'id', nclasses = 3, use = c('var1', 'var2', 'var3'), nominal = 'var3', categorical = c('var1', 'var2'))
round(runif(nrow(testdata), min = 1, max = 3))
testdata
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = round(runif(nrow(testdata), min = 1, max = 3))), analysis_name = 'test', id_variable = 'id', nclasses = 3, use = c('var1', 'var2', 'var10'), nominal = 'var10', categorical = c('var1', 'var2'))
res <- easylca::perform_lca(settings, 1)
easylca::generate_data_diagnosis_report(settings$frame, 'id', title = 'test')
easylca::generate_data_diagnosis_report(settings$frame %>% dplyr::select(id, var1, var2, var10), 'id', title = 'test')
easylca::generate_data_diagnosis_report(settings$frame %>% dplyr::select(id, var1, var2, var10), 'id', title = 'test')
easylca::generate_data_diagnosis_report(settings$frame %>% dplyr::select(id, var1, var2, var10) %>% dplyr::mutate(var10 = as.integer(var10)), 'id', title = 'test')
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = round(runif(nrow(testdata), min = 1, max = 3))), analysis_name = 'test', id_variable = 'id', nclasses = 10, use = c('var1', 'var2', 'var10'), nominal = 'var10', categorical = c('var1', 'var2'))
res <- easylca::perform_lca(settings, 1)
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = round(runif(nrow(testdata), min = 1, max = 3))), analysis_name = 'test', id_variable = 'id', nclasses = 8, use = c('var1', 'var2', 'var10'), nominal = 'var10', categorical = c('var1', 'var2'))
res <- easylca::perform_lca(settings, 1)
generate_model_selection_report(res)
generate_model_selection_report(res)
res <- easylca::perform_lca(settings, 1)
generate_model_selection_report(res)
generate_model_report(res, 1, 5)
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = as.integer(round(runif(nrow(testdata), min = 1, max = 3)))), analysis_name = 'test', id_variable = 'id', nclasses = 8, use = c('var1', 'var2', 'var10'), nominal = 'var10', categorical = c('var1', 'var2'))
res <- easylca::perform_lca(settings, 1)
generate_model_selection_report(res)
generate_model_report(res, 1, 6)
View(res)
test <- res[["models"]][["modeltype_1"]][["test_model1_lca.02_test_model1_lca.out"]]
View(test)
View(test[["parameters"]][["unstandardized"]])
generate_data_diagnosis_report(res$settings$frame, 'id', 'test')
generate_data_diagnosis_report(res$settings$frame %>% dplyr::select('var1', 'var2', 'var10'), 'id', 'test')
generate_data_diagnosis_report(res$settings$frame %>% dplyr::select(var1, var2, var10), 'id', 'test')
generate_data_diagnosis_report(res$settings$frame %>% dplyr::select(var1, var2, var10), 'id', 'test')
res$settings$frame
generate_data_diagnosis_report(res$settings$frame %>% dplyr::select(var1, var2, var10), idcol = 'id', 'test')
generate_data_diagnosis_report(res$settings$frame %>% dplyr::select(id, var1, var2, var10), idcol = 'id', title = 'test')
View(res)
testres[["models"]][["modeltype_1"]][["test_model1_lca.07_test_model1_lca.out"]][["parameters"]]
View(settings)
View(test)
View(test$parameters)
View(test$parameters[["probability.scale"]])
View(test$parameters[["unstandardized"]])
exp(1.37)/(exp(1.37 + 1))
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = as.integer(round(runif(nrow(testdata), min = 1, max = 4)))), analysis_name = 'test', id_variable = 'id', nclasses = 8, use = c('var1', 'var2', 'var10'), nominal = 'var10', categorical = c('var1', 'var2'))
res_4 <- perform_lca(settings, modeltypes = 1)
View(res_4)
View(res_4[["models"]][["modeltype_1"]][["test_model1_lca.03_test_model1_lca.out"]][["parameters"]][["unstandardized"]])
View(test)
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = as.integer(round(runif(nrow(testdata), min = 1, max = 4))), var11 = as.integer(round(runif(nrow(testdata), min = 1, max = 4)))), analysis_name = 'test', id_variable = 'id', nclasses = 8, use = c('var1', 'var2', 'var10'), nominal = 'var10', categorical = c('var1', 'var11'))
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = as.integer(round(runif(nrow(testdata), min = 1, max = 4))), var11 = as.integer(round(runif(nrow(testdata), min = 1, max = 4)))), analysis_name = 'test', id_variable = 'id', nclasses = 8, use = c('var1', 'var11', 'var10'), nominal = 'var10', categorical = c('var1', 'var11'))
generate_data_diagnosis_report(settings$frame %>% dplyr::select('id', 'var1', 'var10', 'var11'), idcol = 'id', title = 'discrete_param_test')
settings <- define_lca(frame = testdata %>% dplyr::mutate(var10 = as.integer(round(runif(nrow(testdata), min = 1, max = 4))), var11 = as.integer(round(runif(nrow(testdata), min = 1, max = 4)))), analysis_name = 'test', id_variable = 'id', nclasses = 4, use = c('var1', 'var11', 'var10'), nominal = 'var10', categorical = c('var1', 'var11'))
perform_lca(settings, modeltypes = 1)
res <- perform_lca(settings, modeltypes = 1)
generate_model_selection_report(res)
rm(res_4)
test <- res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out
test <- res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$parameters
View(test)
View(test[["probability.scale"]])
View(test[["unstandardized"]])
1/(1 - exp(-1.38 -2.278#))
1/(1 - exp(-1.38 -2.278))
1/(1 + exp(-1.38 -2.278))
1 - 1/(1 + exp(-1.38 -2.278))
exp(2.278) / (exp(2.278)+1)
log(0.093/0.907)
log(0.907/0.093)
exp(-2.278) / (exp(-2.278)+1)
exp(-1.296) / (- exp(-1.296))
exp(-1.296) / (1 + exp(-1.296))
exp(0.343) / (1 + exp(0.343))
1 - exp(0.343) / (1 + exp(0.343))
1 - exp(15) / (1 + exp(15))
1 - (exp(15) / (1 + exp(15)) + exp(0.343) / (1 + exp(0.343)))
(exp(-15) / (1 + exp(-15))
(exp(-15) / (1 + exp(-15)))
(exp(-15) / (1 + exp(-15))) + exp(-0.343) / (1 + exp(-0.343))
View(test["unstandardized"] %>% dplyr::filter(LatentClass == 1 & stringr::str_detect(param, 'VAR11')))
View(test[["unstandardized"]] %>% dplyr::filter(LatentClass == 1 & stringr::str_detect(param, 'VAR11')))
View(test[["probability.scale"]] %>% dplyr::filter(LatentClass == 1 & stringr::str_detect(param, 'VAR11')))
(exp(-0.343) / (1 + exp(-0.343)))
(exp(1.296) / (1 + exp(1.296)))
0.785-0.415
1-0.785
exp(-0.079) / (1 + exp(-0.079))
exp(0.798) / (1 + exp(0.798))
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 1)
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 1) %>% dplyr::count(VAR11)
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 1) %>% dplyr::count(VAR10)
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 1) %>% dplyr::count(VAR10) %>% dplyr::mutate(n / nrow(res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata))
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 2) %>% dplyr::count(VAR11)
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 2) %>% dplyr::count(VAR10)
res$models$modeltype_1$test_model1_lca.03_test_model1_lca.out$savedata %>% dplyr::filter(CLASS == 3) %>% dplyr::count(VAR10)
library(devtools)
install.packages('titanic')
Titanic
titanic <- Titanic
rm(titanic)
titanic::titanic_train
titanic <- titanic::titanic_train
View(titanic)
titanic_testdata <- titanic::titanic_train
rm(titanic)
rm(list=ls())
titanic <- titanic::titanic_train
titanic <- titanic::titanic_train %>% glimpse()
titanic <- titanic::titanic_train %>% dplyr::glimpse()
load_all()
titanic <- titanic::titanic_train %>% dplyr::glimpse()
?titanic::titanic_train
titanic %>% dplyr::count(Embarked)
ports_lookup <- c('S' = 1, 'C' = 2, 'Q' = 3, '' = NA)
ports_lookup <- c('S' = 1, 'C' = 2, 'Q' = 3)
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 1, 2),
port = ports_lookup[Embarked])
%>%
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 1, 2),
port = ports_lookup[Embarked]) %>%
dplyr::glimpse()
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 1, 2),
port = ports_lookup[Embarked]) %>%
dplyr::glimpse() %>%
dplyr::count(port)
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 1, 2),
port = ports_lookup[Embarked]) %>%
dplyr::glimpse()
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer() ) %>%
dplyr::glimpse()
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer() ) %>%
dplyr::select(id = PassengerID, survived = Survived, pasclass = Pclass,
age = Age, nsibsp = SibSp, nparchi = Parch, fare = Fare,
isfem, port) %>%
dplyr::glimpse()
titanic %>%
dplyr::mutate(
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer() ) %>%
dplyr::select(id = PassengerId, survived = Survived, pasclass = Pclass,
age = Age, nsibsp = SibSp, nparchi = Parch, fare = Fare,
isfem, port) %>%
dplyr::glimpse()
titanic %>%
dplyr::mutate(
survived = Survived + 1,
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer() ) %>%
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age, nsibsp = SibSp, nparchi = Parch, fare = Fare,
isfem, port) %>%
dplyr::glimpse()
titanic %>%
dplyr::mutate(
survived = Survived + 1,
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = SibSp %>% as.double(), # # of siblings or spouses aboard
nparchi = Parch %>% as.double()) %>% # # of parents or children aboard
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port) %>%
dplyr::glimpse()
titanic <- titanic::titanic_train %>%
dplyr::mutate(
survived = Survived + 1,
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = SibSp %>% as.double(), # # of siblings or spouses aboard
nparchi = Parch %>% as.double()) %>% # # of parents or children aboard
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port) %>%
dplyr::glimpse()
generate_data_diagnosis_report(titanic, 'id', 'titanic')
titanic <- titanic::titanic_train %>%
dplyr::mutate(
survived = (Survived + 1) %>% as.integer(),
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = SibSp, # # of siblings or spouses aboard (ordinal)
nparchi = Parch) %>% # # of parents or children aboard (ordinal)
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port) %>%
dplyr::glimpse()
generate_data_diagnosis_report(titanic, 'id', 'titanic')
titanic %>% count(nparchi)
titanic %>% dplyr::count(nparchi)
titanic %>% dplyr::count(nparchi) %>% dplyr::mutate(prob = n / nrow(titanic))
titanic %>% dplyr::count(nsibsp) %>% dplyr::mutate(prob = n / nrow(titanic))
# reocde SibSp and Parch:
# # of siblings or spouses aboard (ordinal), levels: 0, 1, 2 or more
# # of parents or children aboard (ordinal), levels: 0, 1, 2 or more
titanic <- titanic::titanic_train %>%
dplyr::mutate(
survived = (Survived + 1) %>% as.integer(),
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = (ifelse(SibSp < 2, SibSp, 2) + 1) %>% as.integer(),
nparchi = (ifelse(Parch < 2, Parch, 2) + 1) %>% as.integer()) %>%
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port) %>%
dplyr::glimpse()
titanic %>% dplyr::count(nsibsp) %>% dplyr::mutate(prob = n / nrow(titanic))
titanic %>% dplyr::count(nparchi) %>% dplyr::mutate(prob = n / nrow(titanic))
generate_data_diagnosis_report(titanic, 'id', 'titanic')
titanic_settings <- define_lca(frame = titanic,
analysis_name = 'titanic',
id_variable = 'id',
nclasses = 10,
nominal = c('port', 'pasclass'),
categorical = c('survived', 'isfem', 'nsibsp', 'nparchi'))
titanic_res <- perform_lca(titanic_settings, modeltypes = 1)
generate_model_selection_report(titanic_res)
generate_model_report(titanic_res, 1, 3)
titanic_settings <- define_lca(frame = titanic,
analysis_name = 'titanic',
id_variable = 'id',
nclasses = 10,
nominal = c('port', 'pasclass'),
categorical = c('survived', 'isfem', 'nsibsp', 'nparchi'),
lmrlrt = T)
View(titanic_settings)
# reocde SibSp and Parch:
# # of siblings or spouses aboard (ordinal), levels: 0, 1, 2 or more
# # of parents or children aboard (ordinal), levels: 0, 1, 2 or more
titanic_testdata <- titanic::titanic_train %>%
dplyr::mutate(
survived = (Survived + 1) %>% as.integer(),
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = (ifelse(SibSp < 2, SibSp, 2) + 1) %>% as.integer(),
nparchi = (ifelse(Parch < 2, Parch, 2) + 1) %>% as.integer()) %>%
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port)
titanic_settings <- define_lca(frame = titanic_testdata,
analysis_name = 'titanic',
id_variable = 'id',
nclasses = 10,
nominal = c('port', 'pasclass'),
categorical = c('survived', 'isfem', 'nsibsp', 'nparchi'),
lmrlrt = T)
test()
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
rm(list=ls())
load_all()
test()
random_testdata
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
test_active_file()
test_active_file()
rm(list=ls())
titanic_settings <- define_lca(frame = titanic_testdata,
analysis_name = 'titanic',
id_variable = 'id',
nclasses = 10,
nominal = c('port', 'pasclass'),
categorical = c('survived', 'isfem', 'nsibsp', 'nparchi'),
starts = 320,
cores = 64,
lmrlrt = T)
saveRDS(titanic_settings, 'test.rds')
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
rm(list=ls())
load_all()
dplyr::glimpse(titanic_passengers)
document()
?titanic_passengers
?titanic_passengers
document()
?titanic_passengers
?titanic_passengers
document()
?titanic_passengers
document()
?titanic_passengers
titanic_settings
document()
?titanic_passengers
?titanic_settings
document()
document()
?titanic_settings
document()
?titanic_settings
document()
?titanic_settings
?titanic_settings
document()
?titanic_settings
document()
document()
?titanic_settings
# reocde SibSp and Parch:
# # of siblings or spouses aboard (ordinal), levels: 0, 1, 2 or more
# # of parents or children aboard (ordinal), levels: 0, 1, 2 or more
titanic_passengers <- titanic::titanic_train %>%
dplyr::mutate(
survived = (Survived + 1) %>% as.integer(),
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = (ifelse(SibSp < 2, SibSp, 2) + 1) %>% as.integer(),
nparchi = (ifelse(Parch < 2, Parch, 2) + 1) %>% as.integer()) %>%
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port)
# titanic passengers example data set ----
ports_lookup <- c('S' = 1, 'C' = 2, 'Q' = 3) # Southhampton, Cherbourg, Queenstown
# reocde SibSp and Parch:
# # of siblings or spouses aboard (ordinal), levels: 0, 1, 2 or more
# # of parents or children aboard (ordinal), levels: 0, 1, 2 or more
titanic_passengers <- titanic::titanic_train %>%
dplyr::mutate(
survived = (Survived + 1) %>% as.integer(),
isfem = ifelse(Sex == 'female', 2, 1) %>% as.integer(),
port = ports_lookup[Embarked] %>% as.integer(),
nsibsp = (ifelse(SibSp < 2, SibSp, 2) + 1) %>% as.integer(),
nparchi = (ifelse(Parch < 2, Parch, 2) + 1) %>% as.integer()) %>%
dplyr::select(id = PassengerId, survived, pasclass = Pclass,
age = Age,  fare = Fare, nsibsp, nparchi,
isfem, port)
titanic_settings <- define_lca(frame = titanic_passengers,
analysis_name = 'titanic',
id_variable = 'id',
nclasses = 10,
nominal = c('port', 'pasclass'),
categorical = c('survived', 'isfem', 'nsibsp', 'nparchi'),
starts = 320,
cores = 16,
lmrlrt = T)
saveRDS(titanic_settings, 'settings.rds')
titanic_settings <- define_lca(frame = titanic_passengers,
analysis_name = 'titanic',
id_variable = 'id',
nclasses = 10,
nominal = c('port', 'pasclass'),
categorical = c('survived', 'isfem', 'nsibsp', 'nparchi'),
starts = 320,
cores = 64,
lmrlrt = T)
saveRDS(titanic_settings, 'settings.rds')
test_active_file()
test_active_file()
View(random_testresults)
?rerun_lca
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test()
test()
check()
check()
use_r('define_lca')
tools::showNonASCII('*aa')
tools::showNonASCII('#')
tools::showNonASCII('χ')
tools::showNonASCII('|')
tools::showNonASCII('≤')
check()
dir(pattern = 'lines')
dir(pattern = 'lines', recursive = T)
tools::showNonASCII(''P(2 | class)'')
tools::showNonASCII('P(2 | class)')
tools::showNonASCII('* p < 0.05, ** p < 0.01, *** p < 0.001')
check()
check()
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
check()
use_data(random_testdata,
random_testdata_weights,
random_testresults,
discrete_colors_for_classes,
internal = T,
overwrite = T)
load_all()
check()
check()
check()
usethis::use_logo(img = 'logo')
usethis::use_logo(img = 'logo.png')
rm(list=ls())
check()
check()
check()
check()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
check()
Sys.time()
Sys.time(),
Sys.time(),
Sys.time()
upperclass <- suppressMessages(allparameters %>%
dplyr::group_by(item) %>%
dplyr::slice_max(upper, n = 1) %>% dplyr::ungroup() %>%
dplyr::select('item', 'uppermax' = 'upper') %>%
dplyr::right_join(allparameters))
upperclass <- suppressMessages(allparameters %>%
dplyr::group_by(item) %>%
dplyr::slice_max(upper, n = 1) %>% dplyr::ungroup() %>%
dplyr::select('item', 'uppermax' = 'upper') %>%
dplyr::right_join(allparameters))
check()
check()
check()
check()
check()
check()
check()
upperclass <- suppressMessages(allparameters %>%
dplyr::group_by(item) %>%
dplyr::slice_max(upper, n = 1) %>% dplyr::ungroup() %>%
dplyr::select('item', 'uppermax' = 'upper') %>%
dplyr::right_join(allparameters))
check()
check()
check()
?combn()
check()
test_active_file()
test_active_file()
check()
test_active_file()
check()
?dplyr::rename
is(random_testdata, 'easylca')
is(random_testresults, 'easylca')
check()
test_active_file()
class(titanic_settings)
is(titanic_settings, 'lca_settings')
titanic_settings$analysis_name
titanic_lca_results <- readRDS("N:/Materialien/Software/easylca/data-raw/titanic_lca_results.rds")
generate_model_selection_report(titanic_lca_results)
generate_model_report(titanic_lca_results, 4, 8)
generate_model_report(titanic_lca_results, 2, 3)
generate_model_report(titanic_lca_results, 2, 5)
test_that('check for lca_settings object works', {
expect_error(perform_lca(6),
'Please provide a settings object of type "lca_settings". It can be generated using the define_lca command.')
})
check()
?is()
check()
test_active_file()
use_r()
test_active_file()
load_all()
test_active_file()
test_active_file()
extract_profile(random_testresults, random_testresults$settings)
extract_profile(random_testresults$models$modeltype_1$test_model1_lca.2_test_model1_lca.out, random_testresults$settings)
profile_categorical < -model[["parameters"]][["probability.scale"]] %>% as.data.frame() %>%
dplyr::rename(item = 'param',
level= 'category',
segment = 'LatentClass') %>%
dplyr::mutate(param = 'Probabilities') %>%
dplyr::mutate(level = as.integer(.data$level)-1)
test_active_file()
?dplyr::filter
?dplyr::arrange
?dplyr::rename
test_active_file()
use_r()
test_active_file()
check()
use_package('methods')
?ggplot2::aes
test_active_file()
use_test()
use_r()
dplyr::arrange
?dplyr::arrange
test_active_file()
check()
use_package('utils')
check()
check()
rm(list=ls()))
rm(list=ls())
library(devtools)
