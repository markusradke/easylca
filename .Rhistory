template_files
lapply(template_files, file.remove)
setwd("N:/Materialien/Software/easylca")
test_active_file()
input <- sprintf('%s%.2d_classes.inp', model_path, class)
setwd("N:/Materialien/Software/easylca")
test_active_file()
test_active_file()
use_r('read_models')
use_test()
test_active_file()
use_r('perform_lca')
test_active_file()
test_active_file()
use_test()
use_test()
test_active_file()
View(lca)
?MplusAutomation::readModels
test_active_file()
test_active_file()
use_test('rerun_models')
source("N:/Materialien/Software/easylca/tests/testthat/test-rerun_lca.R")
test_active_file()
setwd("N:/Materialien/Software/easylca")
test_active_file()
test_active_file()
setwd("N:/Materialien/Software/easylca")
test_active_file()
setwd("N:/Materialien/Software/easylca")
test_active_file()
setwd("N:/Materialien/Software/easylca")
test_active_file()
test_active_file()
test_active_file()
test_active_file()
sprintf('%s/%s_template.txt', model_path,
model_path)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
rm(list=ls())
check(9)
check()
use_test()
test_active_file()
source("N:/Materialien/Software/easylca/R/rerun_lca.R")
rm(list=ls())
test_active_file()
View(mplus_results)
View(mplus_results)
setwd("N:/Materialien/Software/easylca")
test_active_file()
View(mplus_results)
test_active_file()
models_in_easylca <- names(easylca$models[[sprintf('modeltype_%d', modeltype)]])
models_for_type <- easylca$models[[sprintf('modeltype_%d', modeltype)]]
models_for_type[[names(mplus_results)]] <- mplus_results
models_for_type <- easylca$models[[sprintf('modeltype_%d', modeltype)]]
models_for_type[[names(mplus_results)]] <- mplus_results
View(models_for_type)
testsettings <- define_lca(random_testdata, 'test','id', nclasses = 3, starts = 20L, cores = 16,
use = c('var1', 'var3', 'var4', 'var5', 'var6', 'var7', 'var8'),
categorical = c('var1'),
censored_above = c('var6'),
censored_below = c('var3', 'var4'),
poisson = 'var8',
negbin = 'var7',
inflated = c('var7', 'var4'))
random_testresults <- perform_lca(testsettings)
saveRDS(random_testresults, 'data-raw/testresults.rds')
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
rm(list=ls())
test_active_file()
View(models_for_type)
test_active_file()
test_active_file()
mplus_results <- MplusAutomation::readModels(type_folder, recursive = TRUE)
models_for_type[[names(mplus_results)]] <- list(mplus_results)
models_for_type[[names(mplus_results)]] <- mplus_results
model_name <- sprintf('%s.%.2d_classes.out',
sprintf('modeltype_%.2d', modeltype),
class)
models_for_type[[model_name]] <- mplus_results
View(models_for_type)
model_name <- sprintf('modeltype_d%.%.2d_classes.out',
modeltype,
class)
model_name <- sprintf('modeltype_%d.%.2d_classes.out',
modeltype,
class)
models_for_type <- easylca$models[[sprintf('modeltype_%d', modeltype)]]
models_for_type[[model_name]] <- mplus_results
View(models_for_type)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
View(easylca)
test_active_file()
test_active_file()
View(easylca)
test_active_file()
test_active_file()
View(easylca)
View(easylca)
?apply
test_active_file()
mplus_results <- make_list_if_only_one_model(mplus_results)
rm(make_list_if_only_one_model())
rm(make_list_if_only_one_model
)
models_for_type <- easylca$models[[sprintf('modeltype_%d', modeltype)]]
View(models_for_type)
lapply(names(mplus_results),
function(model_name){
models_for_type[[model_name]] <- mplus_results[[model_name]]
})
View(models_for_type)
test_active_file()
test_active_file()
View(mplus_results)
View(models_for_type)
models_for_type <<- easylca$models[[sprintf('modeltype_%d', modeltype)]]
lapply(names(mplus_results),
function(model_name){
models_for_type[[model_name]] <- mplus_results[[model_name]]
})
lapply(names(mplus_results),
function(model_name){
models_for_type[[model_name]] <<- mplus_results[[model_name]]
})
View(models_for_type)
test_active_file()
test_active_file()
test_active_file()
use_r('read_models')
test_active_file()
test_active_file()
settings$folder_name
check(
check()
beepr::beep(sound = 3)
use_r('generate_model_report')
test_active_file
test_active_file()
setwd("N:/Materialien/Software/easylca")
setwd("N:/Materialien/Software/easylca")
test_active_file()
check(); beepr::beep(sound = 3)
check(); beepr::beep(sound = 3)
?modifyList()
check(); beepr::beep(sound = 3)
rm(list = ls())
check(); beepr::beep(sound = 3)
library(devtools)
titanic_lca_results <- readRDS("N:/Materialien/Software/easylca/data-raw/titanic_lca_results.rds")
View(titanic_lca_results)
testresults <- readRDS("N:/Materialien/Software/easylca/data-raw/testresults.rds")
View(testresults)
titanic_lca_results_renamed <- titanic_lca_results
create_modeltype_names <- function(type, nclasses){
sprintf('modeltype_%d.%.2d_classes.out',
type, seq(nclasses))
}
names(titanic_lca_results_renamed$models$modeltype_1) <-
create_modeltype_names(1, 10)
View(titanic_lca_results_renamed)
names(titanic_lca_results_renamed$models$modeltype_2) <-
create_modeltype_names(2, 10)
names(titanic_lca_results_renamed$models$modeltype_3) <-
create_modeltype_names(3, 10)
names(titanic_lca_results_renamed$models$modeltype_4) <-
create_modeltype_names(4, 10)
names(titanic_lca_results_renamed$models$modeltype_5) <-
create_modeltype_names(5, 10)
names(titanic_lca_results_renamed$models$modeltype_6) <-
create_modeltype_names(6, 10)
saveRDS(titanic_lca_results_renamed, 'data-raw/titanic_lca_results.rds')
test <- readRDS("N:/Materialien/Software/easylca/data-raw/titanic_lca_results.rds")
View(test)
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
source("N:/Materialien/Software/easylca/data-raw/write_package_data.R")
use_r('plot_profiles')
use_test()
test_active_file()
View(model)
predictions <- model$savedata
View(predictions)
predictions <- model$savedata %>%
dplyr::mutate(cprob = .data[[sprintf('CPROB%d',.data$CLASS)]])
predictions <- model$savedata %>%
dplyr::mutate(cprob = .data[[sprintf('CPROB%d',.data$CLASS)]])
predictions <- model$savedata %>%
dplyr::mutate(cprob = get(sprintf('CPROB%d',.data$CLASS)))
predictions <- model$savedata %>%
dplyr::mutate(cprob = dplyr::across(starts_with("CPROB"), ~ .x[CLASS]))
View(predictions)
predictions <- model$savedata %>%
dplyr::mutate(max_cprob = apply(dplyr::select(., dplyr::starts_with('CPROB')),
1, max, na.rm = TRUE))
View(predictions)
prediction_probabilites <- model$savedata %>%
dplyr::mutate(cprob = apply(dplyr::select(., dplyr::starts_with('CPROB')),
1, max, na.rm = TRUE)) %>%
dplyr::select(class = 'CLASS', 'cprob')
View(prediction_probabilites)
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob))
View(mean_assignement_probabilites)
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(-.data$mean_prob)
View(mean_assignement_probabilites)
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(class = forcats::fct_inorder(class))
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(class = forcats::fct_inorder(class %>% as.character))
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(class = forcats::fct_inorder(class %>% as.integer))
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(class = forcats::fct_inorder(as.factor(class)))
View(mean_assignement_probabilites)
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(x = .data$mean_prob, y = .data$class)) +
ggplot::geom_bar(fill = 'grey')
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(x = .data$mean_prob, y = .data$class)) +
ggplot2::geom_bar(fill = 'grey')
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(x = .data$mean_prob, y = .data$class)) +
ggplot2::geom_co(fill = 'grey')
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(x = .data$mean_prob, y = .data$class)) +
ggplot2::geom_col(fill = 'grey')
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(
class = sprintf('class %d', class),
class = forcats::fct_inorder(class))
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(x = .data$mean_prob, y = .data$class)) +
ggplot2::geom_col(fill = 'grey')
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(x = .data$mean_prob, y = .data$class)) +
ggplot2::geom_col(fill = 'grey') +
ggplot2::theme_minimal()
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(y = .data$class)) +
ggplot2::geom_text(mapping)
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(y = .data$class, color = .data$class)) +
ggplot2::geom_text(ggplot2::aes(label = mean_prob))
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(y = .data$class, color = .data$class)) +
ggplot2::geom_text(ggplot2::aes(label = mean_prob)x = 1)
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(y = .data$class, color = .data$class)) +
ggplot2::geom_text(ggplot2::aes(label = mean_prob), x = 1)
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(y = .data$class, color = .data$class)) +
ggplot2::geom_text(ggplot2::aes(label = mean_prob), x = 1, hjust = 0) +
ggplot2::scale_y_discrete(expand = c(0, 0)) +
ggplot2::scale_x_discrete(expand = c(0, 0)) +
ggplot2::theme_minimal()
ggplot2::ggplot(mean_assignement_probabilites,
ggplot2::aes(y = .data$class, color = .data$class)) +
ggplot2::geom_text(ggplot2::aes(label = mean_prob), x = 1, hjust = 0) +
ggplot2::scale_y_discrete(expand = c(0, 0)) +
ggplot2::scale_x_continuous(expand = c(0, 0)) +
ggplot2::theme_minimal()
View(mean_assignement_probabilites)
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(
class = sprintf('class %d', class),
class = forcats::fct_inorder(class),
mean_prob = sprintf('%.2f%%', mean_prob * 100))
View(mean_assignement_probabilites)
mean_assignement_probabilites <- prediction_probabilites %>%
dplyr::group_by(.data$class) %>%
dplyr::summarize(mean_prob = mean(.data$cprob)) %>%
dplyr::arrange(.data$mean_prob) %>%
dplyr::mutate(
class = sprintf('class %d', class),
class = forcats::fct_inorder(class),
mean_prob = sprintf('%.1f%%', mean_prob * 100))
View(mean_assignement_probabilites)
flextable::flextable(mean_assignement_probabilites)
res <- flextable::flextable(mean_assignement_probabilites)
class(res)
flextable::flextable(mean_assignement_probabilites) %>%
flextable::set_header_labels(class = '',
mean_prob = 'mean assignment\nprobability')
flextable::flextable(mean_assignement_probabilites) %>%
flextable::set_header_labels(class = '',
mean_prob = 'mean assignment\nprobability') %>%
flextable::width(j = 2, width = 1, unit = 'cm')
flextable::flextable(mean_assignement_probabilites) %>%
flextable::set_header_labels(class = '',
mean_prob = 'mean assignment\nprobability') %>%
flextable::width(j = 2, width = 2, unit = 'cm')
?flextable::width
flextable::flextable(mean_assignement_probabilites) %>%
flextable::set_header_labels(class = '',
mean_prob = 'mean assignment\nprobability') %>%
# flextable::width(j = 2, width = 2, unit = 'cm')
flextable::set_table_properties(layout = "autofit").
flextable::flextable(mean_assignement_probabilites) %>%
flextable::set_header_labels(class = '',
mean_prob = 'mean assignment\nprobability') %>%
# flextable::width(j = 2, width = 2, unit = 'cm')
flextable::set_table_properties(layout = "autofit")
flextable::flextable(mean_assignement_probabilites) %>%
flextable::delete_part('header')
flextable::flextable(mean_assignement_probabilites) %>%
flextable::delete_part('header') %>%
flextable::delete_part('footer')
flextable::flextable(mean_assignement_probabilites) %>%
flextable::delete_part('header') %>%
flextable::border_remove()
test_active_file()
generate_model_report(titanic_lca_results, 2, 6)
generate_model_report(titanic_lca_results, 2, 6)
generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
flextable::flextable(mean_assignement_probabilites) %>%
flextable::delete_part('header') %>%
flextable::border_remove() %>%
flextable::set_table_properties(layout = "autofit",
align = 'left', )
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
View(mean_assignement_probabilites)
class_colors <- discrete_colors_for_classes[mean_assignement_probabilites$class] # internal from package
formatted_probabilites <- mean_assignement_probabilites %>%
dplyr::mutate(
class = sprintf('class %d', class),
class = forcats::fct_inorder(class),
mean_prob = sprintf('%.1f%%', mean_prob * 100))
View(formatted_probabilites)
flextable::flextable(formatted_probabilites) %>%
flextable::delete_part('header') %>%
flextable::border_remove() %>%
flextable::fontsize(size = 14) %>%
flextable::bold(j = 1) %>%
flextable::color(j = 1, color = class_colors)
flextable::flextable(formatted_probabilites) %>%
flextable::delete_part('header') %>%
flextable::border_remove() %>%
flextable::fontsize(size = 14) %>%
flextable::bold(j = 1) %>%
flextable::color(j = 1, color = class_colors) %>%
flextable::set_table_properties(layout = "autofit",
align = 'left')
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
test_active_file()
load_all(); generate_model_report(titanic_lca_results, 2, 6)
View(class_counts)
View(prop_annotation)
browser()
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
check()
check()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
check()
check()
install()
test <- readRDS("N:/Materialien/Promotion/05_easylca_latent-class-analysis_with-mixed-inidcators/easylca_presentation_R/salzgitter_20250822_20-49/salzgitter_lca_results_rerun-no-7.rds")
rm(test)
devtools::install()
devtools::install()
library(devtools)
load_all();
load_all(); generate_model_selection_report(titanic_lca_results, n_min = 200)
load_all(); generate_model_selection_report(titanic_lca_results, n_min = 16)
document()
?generate_model_selection_report
document()
document()
?generate_model_selection_report
load_all(); generate_model_selection_report(titanic_lca_results, n_min = 16)
load_all(); generate_model_selection_report(titanic_lca_results, n_min = 16)#
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = T)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = T)
View(profiles)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = T)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = T)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = T)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = T)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = F)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = F)
load_all(); generate_model_report(titanic_lca_results, 2, 6, show_significance = F)
check()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
check()
test_active_file()
profiles <- get_profiles_for_plotting(random_testresults$models[[3]][[3]], random_testresults$settings)
plot <- plot_continuous_profiles(profiles)
methods::isClass(plot)
methods::is(plot, 'ggplot')
test_active_file()
test_active_file()
check()
library(devtools)
use_r('get_profiles_for_plotting')
res <- readRDS("N:/Materialien/Promotion/05_easylca_latent-class-analysis_with-mixed-inidcators/easylca_presentation_R/salzgitter_20250822_20-49/salzgitter_lca_results_rerun-no-7.rds")
load_all()
generate_model_report(res, 1, 4)
View(mea)
View(means)
load_all(); generate_model_report(res, 1,4)
View(profile_types)
load_all(); generate_model_report(res, 1,4)
poisson
errors_poisson <- means %>%
dplyr::filter(.data$item %in% poisson)
!
load_all(); generate_model_report(res, 1,4)
View(profile_types)
load_all(); generate_model_report(res, 1,4)
load_all(); generate_model_report(res, 1,4)
errors_poisson <- means %>%
dplyr::filter(.data$item %in% poisson)
View(errors_poisson)
View(continuous)
random_testresults$models$modeltype_1$modeltype_1.02_classes.out$parameters %>% View()
random_testresults$models$modeltype_1$modeltype_1.02_classes.out$parameters$unstandardized %>% View()
random_testresults$models$modeltype_2$modeltype_2.02_classes.out$parameters$unstandardized %>% View()
res$models$modeltype_1[[4]]$parameters$unstandardized %>% View()
res$models$modeltype_1[[4]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSIGNFC') %>% View()
res$models$modeltype_1[[4]]$parameters$unstandardized %>% View()
res$models$modeltype_1[[4]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC') %>% View()
random_testresults[[2]][[3]]$parameters$unstandardized %>% dplyr::filter(param == 'VAR7')
random_testresults$models[[2]][[3]]$parameters$unstandardized %>% dplyr::filter(param == 'VAR7')
res$models[[2]][[9]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSIGNFC')
res$models[[2]][[9]]$parameters$unstandardized
random_testresults$models[[2]][[3]]$parameters$unstandardized %>% dplyr::filter(param == 'VAR7')
res$models[[2]][[9]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[2]][[7]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[2]][[6]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[2]][[4]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[6]][[10]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[6]][[9]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[5]][[9]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
res$models[[2]][[3]]$parameters$unstandardized %>% dplyr::filter(param == 'WIDSGNFC')
test_active_file()
test_active_file()
load_all(); generate_model_report(res, 1, 4)
# small random test data for testing ----
random_testdata <- readRDS('data-raw/testdata.rds')
# testresults were generated like this:
testsettings <- define_lca(random_testdata, 'test','id', nclasses = 2, starts = 20L, cores = 16,
use = c('var1', 'var3', 'var4', 'var5', 'var6', 'var7', 'var8'),
categorical = c('var1'),
censored_above = c('var6'),
censored_below = c('var3', 'var4'),
poisson = 'var8',
negbin = 'var7',
inflated = c('var7', 'var4'))
perform_lca(testsettings, 2)
